# @format

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   generation: 1
#   name: pg-bill-service-ingress
# spec:
#   ingressClassName: nginx
#   rules:
#   - http:
#       paths:
#       - backend:
#           service:
#             name: pg-bill-service
#             port:
#               number: 8080
#         path: /
#         pathType: Prefix
# ---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 512Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: standard
  hostPath:
    path: /.data
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  volumeName: mysql-pv
  resources:
    requests:
      storage: 256Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: Service
metadata:
  name: pg-bill-service
spec:
  type: LoadBalancer
  selector:
    app: pg-bill-server
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-bill-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pg-bill-server
  template:
    metadata:
      labels:
        app: pg-bill-server
    spec:
      containers:
        - env:
            - name: DB_DATABASE
              value: pg-bill
            - name: DB_HOST
              value: mysql-cluster-ip-service.default
            - name: DB_PASSWORD
              value: root
            - name: DB_PORT
              value: "3306"
            - name: DB_USERNAME
              value: root
          image: 2020mt93721/paying-guest-bill-sevice:v0.0.1
          name: pg-server
          ports:
            - containerPort: 8080
#           resources:
#             requests:
#               cpu: "100m"
#               memory: "128Mi"
#             limits:
#               cpu: "100m"
#               memory: "128Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-cluster-ip-service
spec:
  type: ClusterIP
  selector:
    component: mysql
  ports:
    - port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: mysql
  template:
    metadata:
      labels:
        component: mysql
    spec:
      # volumes:
      #   - name: mysql-storage
      #     persistentVolumeClaim:
      #       claimName: database-persistent-volume-claim
      containers:
        - name: mysql
          image: mysql:8
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-volume
          ports:
            - containerPort: 3306
          # volumeMounts:
          #   - name: mysql-storage
          #     mountPath: /var/lib/mysql
          #     subPath: postgres
          env:
            # - name: PGPASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: pgpassword
            #       key: PGPASSWORD
            - name: MYSQL_DATABASE
              value: pg-bill
            - name: MYSQL_ROOT_PASSWORD
              value: root
      volumes:
        - name: mysql-volume
          persistentVolumeClaim:
            claimName: mysql-pvc
